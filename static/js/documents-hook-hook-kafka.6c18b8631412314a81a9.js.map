{"version":3,"sources":["/home/sameer/workspace/Doc-test/src/documents/Hook/Hook-Kafka.md","/home/sameer/workspace/Doc-test/theme/components/shared/Img/index.js","/home/sameer/workspace/Doc-test/theme/styles/styled-colors.js"],"names":["layoutProps","MDXLayout","MDXContent","components","props","mdxType","parentName","wrapLines","language","style","theme","package","isMDXComponent","Img","src","width","height","baseUrl","useConfig","dark","hljs","color"],"mappings":"ujBAeMA,G,4CAAc,IAGdC,EAAY,UACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,cAACH,EAAD,iBAAeD,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,mBAAQ,CACN,GAAM,sCADR,sCAGA,mBAAQ,CACN,GAAM,eADR,eAGA,oEACA,wBACE,oBAAIC,WAAW,MAAf,gBAAqC,oBAAIA,WAAW,MAChD,oBAAIA,WAAW,MAAf,cAAmC,oBAAIA,WAAW,MAC9C,oBAAIA,WAAW,MAAf,yBACA,oBAAIA,WAAW,MAAf,wFAIV,iOAEA,cAAC,IAAD,CAAmBC,WAAW,EAAMC,SAAS,QAAQC,MAAOC,IAAYL,QAAQ,qBAAhF,8CAGA,mBAAQ,CACN,GAAM,SADR,SAGA,mEAAgD,sCAAhD,sBACA,uDAAoC,sCAApC,yBAAiF,uBAAOM,SAAA,IAAxF,uBACA,uDAAoC,sCAApC,wBAAgF,uBAAOA,SAAA,IAAvF,uBACA,mBAAQ,CACN,GAAM,4BADR,4BAGA,6TAGA,cAAC,IAAD,CAAmBJ,WAAW,EAAMC,SAAS,QAAQC,MAAOC,IAAYL,QAAQ,qBAAhF,4S,sLAaJH,EAAWU,gBAAiB,G,sECtE5B,8IAceC,IATHT,IACX,MAAM,IAAEU,EAAF,MAAMC,EAAN,OAAYC,GAAWZ,GACvB,QAAEa,GAAYC,sBACpB,OACC,2BACC,uBAAKJ,OAAQG,IAAUH,IAAOE,UAAWA,GAAU,SAAUD,SAAUA,GAAS,c,+DCVnF,gFAIAI,IAAKC,KAAKC,MAAQ,UACHF,MAAf","file":"static/js/documents-hook-hook-kafka.99fa4109.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport  themen  from 'theme/styles/styled-colors';\nimport  * as theme  from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport Img from 'theme/components/shared/Img'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"apache-atlas-hook-for-apache-kafka\"\n    }}>{`Apache Atlas Hook for Apache Kafka`}</h1>\n    <h2 {...{\n      \"id\": \"kafka-model\"\n    }}>{`Kafka Model`}</h2>\n    <p>{`Kafka model includes the following types:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Entity types:`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`kafka_topic`}<ul parentName=\"li\">\n              <li parentName=\"ul\">{`super-types: !DataSet`}</li>\n              <li parentName=\"ul\">{`attributes: qualifiedName, name, description, owner, topic, uri, partitionCount`}</li>\n            </ul></li>\n        </ul></li>\n    </ul>\n    <p>{`Kafka entities are created and de-duped in Atlas using unique attribute qualifiedName, whose value should be formatted as detailed below.\nNote that qualifiedName will have topic name in lower case.`}</p>\n    <SyntaxHighlighter wrapLines={true} language=\"shell\" style={theme.dark} mdxType=\"SyntaxHighlighter\">\n   {`topic.qualifiedName: <topic>@<clusterName>`}\n    </SyntaxHighlighter>\n    <h2 {...{\n      \"id\": \"setup\"\n    }}>{`Setup`}</h2>\n    <p>{`Binary files are present in apache-atlas-`}<release-version />{`-kafka-hook.tar.gz`}</p>\n    <p>{`Copy apache-atlas-kafka-hook-`}<release-version />{`/hook/kafka folder to `}<atlas package />{`/hook/    directory`}</p>\n    <p>{`Copy apache-atlas-kafka-hook-`}<release-version />{`/hook-bin folder to  `}<atlas package />{`/hook-bin directory`}</p>\n    <h2 {...{\n      \"id\": \"importing-kafka-metadata\"\n    }}>{`Importing Kafka Metadata`}</h2>\n    <p>{`Apache Atlas provides a command-line utility, import-kafka.sh, to import metadata of Apache Kafka topics into Apache Atlas.\nThis utility can be used to initialize Apache Atlas with topics present in Apache Kafka.\nThis utility supports importing metadata of a specific topic or all topics.`}</p>\n    <SyntaxHighlighter wrapLines={true} language=\"shell\" style={theme.dark} mdxType=\"SyntaxHighlighter\">\n      {`sage 1: <atlas package>/hook-bin/import-kafka.sh\nUsage 2: <atlas package>/hook-bin/import-kafka.sh [-t <topic prefix> OR --topic <topic prefix>]\nUsage 3: <atlas package>/hook-bin/import-kafka.sh [-f <filename>]\n         File Format:\n            topic1\n            topic2\n            topic3`}\n    </SyntaxHighlighter>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { get } from \"../../../utils/theme\";\nimport { mq, breakpoints } from \"../../../styles/responsive\";\nimport { useConfig } from \"../../../../docz-lib/docz/dist\";\nconst Img = props => {\n\tconst { src,width,height } = props;\n\tconst { baseUrl } = useConfig();\n\treturn (\n\t\t<div>\n\t\t\t<img src={`${baseUrl}${src}`} height={`${height || 'auto'}`} width={`${width || '100%'}`} />\n\t\t</div>\n\t);\n};\nexport default Img;\n","import { dark } from 'react-syntax-highlighter/dist/esm/styles/hljs';\n\n\n//dark[\"powershell\"][\"color\"] = \"#37bb9b\";\ndark.hljs.color = \"#37bb9b\";\nexport default dark;"],"sourceRoot":""}