{"version":3,"sources":["/home/sameer/workspace/Doc-test/src/documents/Security/AtlasSimpleAuthorizer.md","/home/sameer/workspace/Doc-test/theme/styles/styled-colors.js"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_home_sameer_workspace_Doc_test_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","href","react_syntax_highlighter__WEBPACK_IMPORTED_MODULE_5__","wrapLines","language","style","theme","isMDXComponent","react_syntax_highlighter_dist_esm_styles_hljs__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","dark","hljs","color"],"mappings":"skBAaMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,gBACD,OAAOG,OAAAE,EAAA,EAAAF,CAACL,EAADK,OAAAG,OAAA,GAAeT,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAE5EJ,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,2BADR,2BAGAL,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,6CADR,6CAGAL,OAAAE,EAAA,EAAAF,CAAA,sDAAiDA,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,KAAQ,CACnEC,KAAQ,2DADqC,0DAAjD,mXAMAP,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,0BADR,0BAGAL,OAAAE,EAAA,EAAAF,CAAA,wIACAA,OAAAE,EAAA,EAAAF,CAACQ,EAAA,EAAD,CAAmBC,WAAW,EAAMC,SAAS,QAAQC,MAAOC,IAAYR,QAAQ,qBAAhF,0HAIAJ,OAAAE,EAAA,EAAAF,CAAA,2IACAA,OAAAE,EAAA,EAAAF,CAAA,UACEA,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,oFACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,2CACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,cAEFN,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,sBADR,sBAGAL,OAAAE,EAAA,EAAAF,CAAA,0MAEAA,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,SADR,SAGAL,OAAAE,EAAA,EAAAF,CAAA,mDACAA,OAAAE,EAAA,EAAAF,CAAA,UACEA,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,mCACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,wFACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,yFAEFN,OAAAE,EAAA,EAAAF,CAAA,+IACAA,OAAAE,EAAA,EAAAF,CAACQ,EAAA,EAAD,CAAmBC,WAAW,EAAMC,SAAS,QAAQC,MAAOC,IAAYR,QAAQ,qBAAhF,4/BAuDAJ,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,yCADR,yCAGAL,OAAAE,EAAA,EAAAF,CAAA,mFACAA,OAAAE,EAAA,EAAAF,CAACQ,EAAA,EAAD,CAAmBC,WAAW,EAAMC,SAAS,QAAQC,MAAOC,IAAYR,QAAQ,qBAAhF,wSAiBAJ,OAAAE,EAAA,EAAAF,CAAA,0MAEAA,OAAAE,EAAA,EAAAF,CAACQ,EAAA,EAAD,CAAmBC,WAAW,EAAMC,SAAS,QAAQC,MAAOC,IAAYR,QAAQ,qBAAhF,4cAmBJR,EAAWiB,gBAAiB,kECjK5B,IAAAC,EAAAC,EAAA,wEAIAC,IAAKC,KAAKC,MAAQ,UACHF,MAAf","file":"static/js/documents-security-atlas-simple-authorizer.baeaf2cb.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport  themen  from 'theme/styles/styled-colors';\nimport  * as theme  from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"atlas-simple-authorizer\"\n    }}>{`Atlas Simple Authorizer`}</h1>\n    <h2 {...{\n      \"id\": \"setting-up-atlas-to-use-simple-authorizer\"\n    }}>{`Setting up Atlas to use Simple Authorizer`}</h2>\n    <p>{`As detailed in Atlas Authorization Model](`}<a parentName=\"p\" {...{\n        \"href\": \"http://atlas.apache.org/Atlas-Authorization-Model.html\"\n      }}>{`http://atlas.apache.org/Atlas-Authorization-Model.html`}</a>{`), Apache Atlas supports a pluggable authorization\nmodel. Simple authorizer is the default authorizer implementation included in Apache Atlas. Simple authorizer uses\npolicies defined in a JSON file. This document provides details of steps to configure Apache Atlas to use the simple\nauthorizer and details of the JSON file format containing authorization policies.`}</p>\n    <h2 {...{\n      \"id\": \"configure-apache-atlas\"\n    }}>{`Configure Apache Atlas`}</h2>\n    <p>{`To configure Apache Atlas to use simple authorizer, include the following properties in application.properties config file:`}</p>\n    <SyntaxHighlighter wrapLines={true} language=\"shell\" style={theme.dark} mdxType=\"SyntaxHighlighter\">\n      {`atlas.authorizer.impl=simple\natlas.authorizer.simple.authz.policy.file=/etc/atlas/conf/atlas-simple-authz-policy.json`}\n    </SyntaxHighlighter>\n    <p>{`Please note that if the policy file location specified is not an absolute path, the file will be looked up in following paths:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Apache Atlas configuration directory (specified by system property =atlas.conf=)`}</li>\n      <li parentName=\"ul\">{`Apache Atlas server's current directory`}</li>\n      <li parentName=\"ul\">{`CLASSPATH`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"policy-file-format\"\n    }}>{`Policy file format`}</h3>\n    <p>{`Simple authorizer uses =roles= to group permissions, which can then be assigned to users and user-groups. Following examples\nwould help to understand the details of the policy file format:`}</p>\n    <h3 {...{\n      \"id\": \"roles\"\n    }}>{`Roles`}</h3>\n    <p>{`Following policy file defines 3 roles:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`ROLE_ADMIN: has all permissions`}</li>\n      <li parentName=\"ul\">{`PROD_READ_ONLY: has access to read entities having qualifiedName ending with \"@prod\"`}</li>\n      <li parentName=\"ul\">{`TEST_ALL_ACCESS: has all access to entities having qualifiedName ending with \"@test\"`}</li>\n    </ul>\n    <p>{`Simple authorizer supports Java reg-ex to specify values for privilege/entity-type/entity-id/classification/typeName/typeCategory.`}</p>\n    <SyntaxHighlighter wrapLines={true} language=\"shell\" style={theme.dark} mdxType=\"SyntaxHighlighter\">\n      {`{\n  \"roles\": {\n    \"ROLE_ADMIN\": {\n      \"adminPermissions\": [\n        {\n          \"privileges\": [ \".*\" ]\n        }\n      ],\n  \"entityPermissions\": [\n    {\n      \"privileges\":      [ \".*\" ],\n      \"entityTypes\":     [ \".*\" ],\n      \"entityIds\":       [ \".*\" ],\n      \"classifications\": [ \".*\" ]\n    }\n  ],\n\n  \"typePermissions\": [\n    {\n      \"privileges\":     [ \".*\" ],\n      \"typeCategories\": [ \".*\" ],\n      \"typeNames\":      [ \".*\" ]\n    }\n  ]\n},\n\n\"PROD_READ_ONLY\" : {\n  \"entityPermissions\": [\n    {\n      \"privileges\":      [ \"entity-read\", \"entity-read-classification\" ],\n      \"entityTypes\":     [ \".*\" ],\n      \"entityIds\":       [ \".*@prod\" ],\n      \"classifications\": [ \".*\" ]\n    }\n}\n\n\"TEST_ALL_ACCESS\" : {\n  \"entityPermissions\": [\n    {\n      \"privileges\":      [ \".*\" ],\n      \"entityTypes\":     [ \".*\" ],\n      \"entityIds\":       [ \".*@test\" ],\n      \"classifications\": [ \".*\" ]\n    }\n}\n  },\n  \"userRoles\": {\n   ...\n  },\n  \"groupRoles\": {\n   ...\n  }\n}`}\n    </SyntaxHighlighter>\n    <h3 {...{\n      \"id\": \"assign-roles-to-users-and-user-groups\"\n    }}>{`Assign Roles to Users and User Groups`}</h3>\n    <p>{`Roles defined above can be assigned (granted) to users as shown below:`}</p>\n    <SyntaxHighlighter wrapLines={true} language=\"shell\" style={theme.dark} mdxType=\"SyntaxHighlighter\">\n      {`{\n  \"roles\": {\n   ...\n  },\n  \"userRoles\": {\n    \"admin\":   [ \"ROLE_ADMIN\" ],\n    \"steward\": [ \"DATA_STEWARD\" ],\n    \"user1\":   [ \"PROD_READ_ONLY\" ],\n    \"user2\":   [ \"TEST_ALL_ACCESS\" ],\n    \"user3\":   [ \"PROD_READ_ONLY\", \"TEST_ALL_ACCESS\" ],\n  },\n  \"groupRoles\": {\n   ...\n  }\n}`}\n    </SyntaxHighlighter>\n    <p>{`Roles can be assigned (granted) to user-groups as shown below. An user can belong to multiple groups; roles assigned to\nall groups the user belongs to will be used to authorize the access.`}</p>\n    <SyntaxHighlighter wrapLines={true} language=\"shell\" style={theme.dark} mdxType=\"SyntaxHighlighter\">\n      {`{\n  \"roles\": {\n   ...\n  },\n  \"userRoles\": {\n   ...\n  },\n  \"groupRoles\": {\n    \"admins\":        [ \"ROLE_ADMIN\" ],\n    \"dataStewards\":  [ \"DATA_STEWARD\" ],\n    \"testUsers\":     [ \"TEST_ALL_ACCESS\" ],\n    \"prodReadUsers\": [ \"PROD_READ_ONLY\" ]\n  }\n}`}\n    </SyntaxHighlighter>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { dark } from 'react-syntax-highlighter/dist/esm/styles/hljs';\n\n\n//dark[\"powershell\"][\"color\"] = \"#37bb9b\";\ndark.hljs.color = \"#37bb9b\";\nexport default dark;"],"sourceRoot":""}