{"version":3,"sources":["/home/sameer/workspace/Doc-test/src/documents/Security/AtlasRangerAuthorizer.md","/home/sameer/workspace/Doc-test/theme/components/shared/Img/index.js","/home/sameer/workspace/Doc-test/theme/styles/styled-colors.js"],"names":["layoutProps","MDXLayout","MDXContent","components","props","mdxType","parentName","wrapLines","language","style","theme","alt","src","width","isMDXComponent","Img","height","baseUrl","useConfig","dark","hljs","color"],"mappings":"onBAeMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,cAACH,EAAD,iBAAeD,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,mBAAQ,CACN,GAAM,2BADR,2BAGA,mBAAQ,CACN,GAAM,8DADR,8DAGA,yCAAsB,iCAAGC,WAAW,KAAQ,CACxC,KAAQ,4DADU,6BAAtB,gRAKA,mBAAQ,CACN,GAAM,0BADR,0BAGA,iIACA,wBACE,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAd,+EACP,cAAC,IAAD,CAAmBC,WAAW,EAAMC,SAAS,QAAQC,MAAOC,IAAYL,QAAQ,qBAAhF,gCAGO,mBAAGC,WAAW,MAAd,uIAGF,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAd,kFACN,oBAAIA,WAAW,KAAf,IAAwB,4BAAYA,WAAW,MAAvB,kCAAxB,uCADM,IAEI,4BAAYA,WAAW,KAAvB,kCAFJ,oCAEmH,8BAFnH,WAGJ,4BAAYA,WAAW,KAAvB,kCAHI,qCAG4G,8BAH5G,SAKF,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAd,8PACN,oBAAIA,WAAW,KAAf,IAAwB,4BAAYA,WAAW,MAAvB,mCAAxB,6BADM,IAEI,4BAAYA,WAAW,KAAvB,mCAFJ,+BAGN,oBAAIA,WAAW,KAAf,IAAwB,4BAAYA,WAAW,MAAvB,mCAAxB,+BAHM,IAII,4BAAYA,WAAW,KAAvB,mCAJJ,0BAOJ,mBAAQ,CACN,GAAM,6DADR,6DAGA,iQAEA,wBACE,oBAAIA,WAAW,MAAK,wBAAQA,WAAW,MAAnB,WAEtB,8HACA,cAAC,IAAD,CAAKK,IAAI,2CAA2CC,IAAG,wCAA2CC,MAAM,MAAMR,QAAQ,QACtH,yBACA,wBACE,oBAAIC,WAAW,MAAK,wBAAQA,WAAW,MAAnB,YAEtB,2JACA,cAAC,IAAD,CAAKK,IAAI,6CAA6CC,IAAG,2CAA8CC,MAAM,MAAMR,QAAQ,QAC3H,yBACA,wBACE,oBAAIC,WAAW,MAAK,wBAAQA,WAAW,MAAnB,oBAApB,oGAGF,cAAC,IAAD,CAAKK,IAAI,4CAA4CC,IAAG,wCAA2CC,MAAM,MAAMR,QAAQ,QACvH,yBACA,mBAAQ,CACN,GAAM,8DADR,8DAGA,ubAIA,cAAC,IAAD,CAAKM,IAAI,uBAAuBC,IAAG,iCAAoCC,MAAM,MAAMR,QAAQ,S,qMAK/FH,EAAWY,gBAAiB,G,sEClG5B,8IAceC,IATHX,IACX,MAAM,IAAEQ,EAAF,MAAMC,EAAN,OAAYG,GAAWZ,GACvB,QAAEa,GAAYC,sBACpB,OACC,2BACC,uBAAKN,OAAQK,IAAUL,IAAOI,UAAWA,GAAU,SAAUH,SAAUA,GAAS,c,+DCVnF,gFAIAM,IAAKC,KAAKC,MAAQ,UACHF,MAAf","file":"static/js/documents-security-atlas-ranger-authorizer.1ea9302a.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport  themen  from 'theme/styles/styled-colors';\nimport  * as theme  from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport Img from 'theme/components/shared/Img'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"atlas-ranger-authorizer\"\n    }}>{`Atlas Ranger Authorizer`}</h1>\n    <h2 {...{\n      \"id\": \"setting-up-apache-atlas-to-use-apache-ranger-authorization\"\n    }}>{`Setting up Apache Atlas to use Apache Ranger Authorization`}</h2>\n    <p>{`As detailed in `}<a parentName=\"p\" {...{\n        \"href\": \"http://atlas.apache.org//Atlas-Authorization-Model.html\"\n      }}>{`Atlas Authorization Model`}</a>{`, Apache Atlas supports pluggable authorization\nmodel. Apache Ranger provides an authorizer implementation that uses Apache Ranger policies for authorization. In\naddition, the authorizer provided by Apache Ranger audits all authorizations into a central audit store.`}</p>\n    <h3 {...{\n      \"id\": \"configure-apache-atlas\"\n    }}>{`Configure Apache Atlas`}</h3>\n    <p>{`To configure Apache Atlas to use Apache Ranger authorizer, please follow the instructions given below:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Include the following property in atlas-application.properties config file:`}</p>\n <SyntaxHighlighter wrapLines={true} language=\"shell\" style={theme.dark} mdxType=\"SyntaxHighlighter\">\n {`atlas.authorizer.impl=ranger`}\n </SyntaxHighlighter>\n        <p parentName=\"li\">{` If you use Apache Ambari to deploy Apache Atlas and Apache Ranger, enable Atlas plugin in configuration pages for\nApache Ranger.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Include libraries of Apache Ranger plugin in libext directory of Apache Atlas\n`}<em parentName=\"p\">{` `}<inlineCode parentName=\"em\">{`<Atlas installation directory>`}</inlineCode>{`/libext/ranger-atlas-plugin-impl/\n`}</em>{` `}<inlineCode parentName=\"p\">{`<Atlas installation directory>`}</inlineCode>{`/libext/ranger-atlas-plugin-shim-`}<version />{`.jar\n* `}<inlineCode parentName=\"p\">{`<Atlas installation directory>`}</inlineCode>{`/libext/ranger-plugin-classloader-`}<version />{`.jar`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Include configuration files for Apache Ranger plugin in configuration directory of Apache Atlas - typically under /etc/atlas/conf directory. For more details on configuration file contents, please refer to appropriate documentation in Apache Ranger.\n`}<em parentName=\"p\">{` `}<inlineCode parentName=\"em\">{`<Atlas configuration directory>`}</inlineCode>{`/ranger-atlas-audit.xml\n`}</em>{` `}<inlineCode parentName=\"p\">{`<Atlas configuration directory>`}</inlineCode>{`/ranger-atlas-security.xml\n`}<em parentName=\"p\">{` `}<inlineCode parentName=\"em\">{`<Atlas configuration directory>`}</inlineCode>{`/ranger-policymgr-ssl.xml\n`}</em>{` `}<inlineCode parentName=\"p\">{`<Atlas configuration directory>`}</inlineCode>{`/ranger-security.xml`}</p>\n      </li>\n    </ul>\n    <h3 {...{\n      \"id\": \"apache-ranger-authorization-policy-model-for-apache-atlas\"\n    }}>{`Apache Ranger authorization policy model for Apache Atlas`}</h3>\n    <p>{`Apache Ranger authorization policy model for Apache Atlas supports 3 resource hierarchies, to control access to: types,\nentities and admin operations. Following images show various details of each type of policy in Apache Ranger.`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Types`}</strong></li>\n    </ul>\n    <p>{`Following authorization policy allows user 'admin' to create/update/delete any classification type.`}</p>\n    <Img alt=\"Apache Ranger policy for type operations\" src={`/images/twiki/ranger-policy-types.png`} width=\"600\" mdxType=\"Img\" />\n    <hr></hr>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Entity`}</strong></li>\n    </ul>\n    <p>{`Following authorization policy allows user 'admin' perform all operations on metadata entities of Hive database named \"my_db\".`}</p>\n    <Img alt=\"Apache Ranger policy for entity operations\" src={`/images/twiki/ranger-policy-entities.png`} width=\"600\" mdxType=\"Img\" />\n    <hr></hr>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Admin Operations`}</strong>{`\nFollowing authorization policy allows user 'admin' to perform export/import admin operations.`}</li>\n    </ul>\n    <Img alt=\"Apache Ranger policy for admin operations\" src={`/images/twiki/ranger-policy-admin.png`} width=\"600\" mdxType=\"Img\" />\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"apache-ranger-access-audit-for-apache-atlas-authorizations\"\n    }}>{`Apache Ranger access audit for Apache Atlas authorizations`}</h3>\n    <p>{`Apache Ranger authorization plugin generates audit logs with details of the access authorized by the plugin. The details\ninclude the object accessed (eg. hive_table with ID cost_savings.claim_savings@cl1), type of access performed (eg.\nentity-add-classification, entity-remove-classification), name of the user, time of access and the IP address the access\nrequest came from - as shown in the following image.`}</p>\n    <Img alt=\"Apache Ranger audit \" src={`/images/twiki/ranger-audit.png`} width=\"800\" mdxType=\"Img\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { get } from \"../../../utils/theme\";\nimport { mq, breakpoints } from \"../../../styles/responsive\";\nimport { useConfig } from \"../../../../docz-lib/docz/dist\";\nconst Img = props => {\n\tconst { src,width,height } = props;\n\tconst { baseUrl } = useConfig();\n\treturn (\n\t\t<div>\n\t\t\t<img src={`${baseUrl}${src}`} height={`${height || 'auto'}`} width={`${width || '100%'}`} />\n\t\t</div>\n\t);\n};\nexport default Img;\n","import { dark } from 'react-syntax-highlighter/dist/esm/styles/hljs';\n\n\n//dark[\"powershell\"][\"color\"] = \"#37bb9b\";\ndark.hljs.color = \"#37bb9b\";\nexport default dark;"],"sourceRoot":""}