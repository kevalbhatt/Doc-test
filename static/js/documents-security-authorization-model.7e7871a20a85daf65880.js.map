{"version":3,"sources":["/home/sameer/workspace/Doc-test/src/documents/Security/AuthorizationModel.md","/home/sameer/workspace/Doc-test/theme/styles/styled-colors.js"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_home_sameer_workspace_Doc_test_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","react_syntax_highlighter__WEBPACK_IMPORTED_MODULE_5__","wrapLines","language","style","theme","href","isMDXComponent","react_syntax_highlighter_dist_esm_styles_hljs__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","dark","hljs","color"],"mappings":"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","file":"static/js/documents-security-authorization-model.81091e06.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport  themen  from 'theme/styles/styled-colors';\nimport  * as theme  from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h3 {...{\n      \"id\": \"atlas-authorization-model\"\n    }}>{`Atlas Authorization Model`}</h3>\n    <h2 {...{\n      \"id\": \"introduction\"\n    }}>{`Introduction`}</h2>\n    <p>{`Atlas is a scalable and extensible set of core foundational governance services – enabling enterprises to effectively and\nefficiently meet their compliance requirements within Hadoop and allows integration with the whole enterprise data ecosystem.\nApache Atlas provides open metadata management and governance capabilities for organizations to build a catalog of their\ndata assets, classify and govern these assets and provide collaboration capabilities around these data assets for data\nscientists, analysts and the data governance team.`}</p>\n    <p>{`This document covers details of the authorization model supported by Apache Atlas to control access to metadata managed by Atlas.`}</p>\n    <h2 {...{\n      \"id\": \"authorization-of-access-to-types\"\n    }}>{`Authorization of access to Types`}</h2>\n    <p>{`Apache Atlas provides a type system that allows users to model the metadata objects they would like to manage. The model\nis composed of definitions called ‘types’. Apache Atlas type system supports following categories of types:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Entity`}</li>\n      <li parentName=\"ul\">{`Classification`}</li>\n      <li parentName=\"ul\">{`Relationship`}</li>\n      <li parentName=\"ul\">{`Struct`}</li>\n      <li parentName=\"ul\">{`Enum`}</li>\n    </ul>\n    <p>{`The authorization model enables control of which users, groups can perform the following operations on types, based on\ntype names and type categories:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`create`}</li>\n      <li parentName=\"ul\">{`update`}</li>\n      <li parentName=\"ul\">{`delete`}</li>\n    </ul>\n    <p>{`Here are few examples of access controls supported by the model:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Admin users can create/update/delete types of all categories`}</li>\n      <li parentName=\"ul\">{`Data stewards can create/update/delete classification types`}</li>\n      <li parentName=\"ul\">{`Healthcare data stewards can create/update/delete types having names start with “hc”`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"authorization-of-access-to-entities\"\n    }}>{`Authorization of access to Entities`}</h2>\n    <p>{`An entity is an instance of an entity-type and such instances represent objects in the real world – for example a table\nin Hive, a HDFS file, a Kafka topic. The authorization model enables control of which users, groups can perform the\nfollowing operations on entities – based on entity-types, entity-classifications, entity-id:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`read`}</li>\n      <li parentName=\"ul\">{`create`}</li>\n      <li parentName=\"ul\">{`update`}</li>\n      <li parentName=\"ul\">{`delete`}</li>\n      <li parentName=\"ul\">{`read classification`}</li>\n      <li parentName=\"ul\">{`add classification`}</li>\n      <li parentName=\"ul\">{`update classification`}</li>\n      <li parentName=\"ul\">{`remove classification`}</li>\n    </ul>\n    <p>{`Here are few examples of access controls supported by the model:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Admin users can perform all entity operations on entities of all types`}</li>\n      <li parentName=\"ul\">{`Data stewards can perform all entity operations, except delete, on entities of all types`}</li>\n      <li parentName=\"ul\">{`Data quality admins can add/update/remove DATA_QUALITY classification`}</li>\n      <li parentName=\"ul\">{`Users in specific groups can read/update entities with PII classification or its sub-classification`}</li>\n      <li parentName=\"ul\">{`Finance users can read/update entities whose ID start with ‘finance’`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"authorization-of-admin-operations\"\n    }}>{`Authorization of Admin operations`}</h2>\n    <p>{`The authorization model enables control of which users, groups can perform the following administrative operations:`}</p>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`import entities`}</em></li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`export entities`}</em></li>\n    </ul>\n    <p>{`Users with above accesses can import/export entities without requiring them to be granted with fine-grained entity level accesses.`}</p>\n    <h2 {...{\n      \"id\": \"pluggable-authorization\"\n    }}>{`Pluggable Authorization`}</h2>\n    <p>{`Apache Atlas supports a pluggable authorization interface, as shown below, that enable alternate implementations to handle authorizations.`}</p>\n    <p>{`The name of the class implementing the authorization interface can be registered with Apache Atlas using configuration `}<inlineCode parentName=\"p\">{`atlas.authorizer.impl`}</inlineCode>{`. When this property is not set, Apache Atlas will use its default implementation in `}<inlineCode parentName=\"p\">{`org.apache.atlas.authorize.simple.AtlasSimpleAuthorizer`}</inlineCode>{`.`}</p>\n    <SyntaxHighlighter wrapLines={true} language=\"shell\" style={theme.dark} mdxType=\"SyntaxHighlighter\">\n      {`\n   package org.apache.atlas.authorize;\n   public interface AtlasAuthorizer {\n     void init();\n     void cleanUp();\n\n     boolean isAccessAllowed(AtlasAdminAccessRequest request) throws AtlasAuthorizationException;\n\n     boolean isAccessAllowed(AtlasEntityAccessRequest request) throws AtlasAuthorizationException;\n\n     boolean isAccessAllowed(AtlasTypeAccessRequest request) throws AtlasAuthorizationException;\n   }`}\n    </SyntaxHighlighter>\n    <h2 {...{\n      \"id\": \"simple-authorizer\"\n    }}>{`Simple Authorizer`}</h2>\n    <p>{`Simple authorizer is the default authorizer implementation included in Apache Atlas. For details of setting up Apache Atlas\nto use simple authorizer, please see `}<a parentName=\"p\" {...{\n        \"href\": \"http://atlas.apache.org/Atlas-Authorization-Simple-Authorizer.html\"\n      }}>{`Setting up Atlas to use Simple Authorizer`}</a></p>\n    <h2 {...{\n      \"id\": \"ranger-authorizer\"\n    }}>{`Ranger Authorizer`}</h2>\n    <p>{`To configure Apache Atlas to use authorization implementation provided by Apache Ranger, include the following property\nin application.properties config file:`}</p>\n    <SyntaxHighlighter wrapLines={true} language=\"shell\" style={theme.dark} mdxType=\"SyntaxHighlighter\">\n      {`atlas.authorizer.impl=ranger`}\n    </SyntaxHighlighter>\n    <p>{`Apache Ranger Authorizer requires configuration files to be setup, for example to specify Apache Ranger admin server URL,\nname of the service containing authorization policies, etc. For more details please see, `}<a parentName=\"p\" {...{\n        \"href\": \"http://atlas.apache.org/Atlas-Authorization-Ranger-Authorizer.html\"\n      }}>{`Setting up Atlas to use Ranger Authorizer`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"none-authorizer\"\n    }}>{`None authorizer`}</h2>\n    <p>{`In addition to the default authorizer, Apache Atlas includes an authorizer that permits all accesses to all users. This authorizer can be useful in test environments and unit tests. To use this authorizer, set the following configuration:`}</p>\n    <SyntaxHighlighter wrapLines={true} language=\"shell\" style={theme.dark} mdxType=\"SyntaxHighlighter\">\n      {`atlas.authorizer.impl=NONE`}\n    </SyntaxHighlighter>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { dark } from 'react-syntax-highlighter/dist/esm/styles/hljs';\n\n\n//dark[\"powershell\"][\"color\"] = \"#37bb9b\";\ndark.hljs.color = \"#37bb9b\";\nexport default dark;"],"sourceRoot":""}