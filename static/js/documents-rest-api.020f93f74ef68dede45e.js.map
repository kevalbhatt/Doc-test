{"version":3,"sources":["/home/sameer/workspace/Doc-test/src/documents/RestAPI.md","/home/sameer/workspace/Doc-test/theme/components/shared/common/CustomLink.js"],"names":["layoutProps","MDXLayout","MDXContent","components","props","mdxType","parentName","href","isMDXComponent","CustomLink","target","style","color","children"],"mappings":"qaAYMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,cAACH,EAAD,iBAAeD,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,mBAAQ,CACN,GAAM,YADR,YAGA,wBACE,oBAAIC,WAAW,MAAK,cAAC,IAAD,CAAYC,KAAK,4CAA4CF,QAAQ,cAArE,2BACpB,oBAAIC,WAAW,MAAK,cAAC,IAAD,CAAYC,KAAK,wCAAwCF,QAAQ,cAAjE,gC,8KAM1BH,EAAWM,gBAAiB,G,8ECjC5B,kFAEA,MAAMC,EAAaL,IAEf,OAAO,uBAAGG,KAAMH,EAAMG,KAAMG,OAAQN,EAAMM,QAAU,SAAUC,MADhD,CAAEC,MAAO,YACsDR,EAAMS","file":"static/js/documents-rest-api.21325c88.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport {CustomLink} from \"theme/components/shared/common/CustomLink\";\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"rest-api\"\n    }}>{`REST API`}</h1>\n    <ol>\n      <li parentName=\"ol\"><CustomLink href=\"http://atlas.apache.org/api/v2/index.html\" mdxType=\"CustomLink\">REST API Documentation</CustomLink></li>\n      <li parentName=\"ol\"><CustomLink href=\"http://atlas.apache.org/api/rest.html\" mdxType=\"CustomLink\">Legacy API Documentation </CustomLink></li>\n    </ol>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","import React from 'react';\n\nconst CustomLink = props => {\n    const style = { color: '#4a90e2'};\n    return <a href={props.href} target={props.target || \"_blank\"} style={style}>{props.children}</a>\n};\n\nexport {\n    CustomLink\n};\n"],"sourceRoot":""}