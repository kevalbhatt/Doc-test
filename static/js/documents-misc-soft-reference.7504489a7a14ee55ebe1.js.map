{"version":3,"sources":["/home/sameer/workspace/Doc-test/src/documents/Misc/SoftReference.md"],"names":["layoutProps","MDXLayout","MDXContent","components","props","mdxType","parentName","wrapLines","language","style","dark","isMDXComponent"],"mappings":"ohBAaMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,cAACH,EAAD,iBAAeD,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,mBAAQ,CACN,GAAM,yCADR,0CAGA,mBAAQ,CACN,GAAM,cADR,cAGA,gKACA,yGACA,0JACA,yCAAsB,oBAAIC,WAAW,KAAf,mBAAtB,kBAAoF,oBAAIA,WAAW,KAAf,QAApF,8EACA,mBAAQ,CACN,GAAM,iBADR,iBAGA,iFACA,cAAC,IAAD,CAAmBC,WAAW,EAAMC,SAAS,OAAOC,MAAOC,IAAML,QAAQ,qBAAzE,oT,yLAkBJH,EAAWS,gBAAiB","file":"static/js/documents-misc-soft-reference.921c9999.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { dark } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"entity-attribute-option-softreference\"\n    }}>{`Entity Attribute Option: SoftReference`}</h1>\n    <h4 {...{\n      \"id\": \"background\"\n    }}>{`Background`}</h4>\n    <p>{`Entity attributes are specified using attribute definitions. An attributes persistence strategy is determined by based on their type.`}</p>\n    <p>{`Primitive types are persisted as properties within the vertex of their parent.`}</p>\n    <p>{`Non-primitive attributes get a vertex of their own and and edge is created between the parent the child to establish ownership.`}</p>\n    <p>{`Attribute with `}<em parentName=\"p\">{`isSoftReference`}</em>{` option set to `}<em parentName=\"p\">{`true`}</em>{`, is non-primitive attribute that gets treatment of a primitive attribute.`}</p>\n    <h4 {...{\n      \"id\": \"specification\"\n    }}>{`Specification`}</h4>\n    <p>{`Below is an example of using the new attribute option.`}</p>\n    <SyntaxHighlighter wrapLines={true} language=\"json\" style={dark} mdxType=\"SyntaxHighlighter\">\n  {`\"attributeDefs\": [\n      {\n        \"name\": \"replicatedFrom\",\n        \"typeName\": \"array<AtlasServer>\",\n        \"cardinality\": \"SET\",\n        \"isIndexable\": false,\n        \"isOptional\": true,\n        \"isUnique\": false,\n        \"options\": {\n          \"isSoftReference\": \"true\"\n        }\n      }`}\n    </SyntaxHighlighter>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}