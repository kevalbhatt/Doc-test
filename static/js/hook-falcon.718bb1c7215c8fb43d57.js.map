{"version":3,"sources":["/Users/keval/projects/atlas/doc/src/Hook-Falcon.md"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_keval_projects_atlas_doc_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","className","href","isMDXComponent"],"mappings":"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","file":"static/js/hook-falcon.f5c7872c.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"falcon-atlas-bridge\"\n    }}>{`Falcon Atlas Bridge`}</h1>\n    <h2 {...{\n      \"id\": \"falcon-model\"\n    }}>{`Falcon Model`}</h2>\n    <p>{`The default hive model includes the following types:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Entity types:`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`falcon_cluster`}<ul parentName=\"li\">\n              <li parentName=\"ul\">{`super-types: Infrastructure`}</li>\n              <li parentName=\"ul\">{`attributes: timestamp, colo, owner, tags`}</li>\n            </ul></li>\n          <li parentName=\"ul\">{`falcon_feed`}<ul parentName=\"li\">\n              <li parentName=\"ul\">{`super-types: !DataSet`}</li>\n              <li parentName=\"ul\">{`attributes: timestamp, stored-in, owner, groups, tags`}</li>\n            </ul></li>\n          <li parentName=\"ul\">{`falcon_feed_creation`}<ul parentName=\"li\">\n              <li parentName=\"ul\">{`super-types: Process`}</li>\n              <li parentName=\"ul\">{`attributes: timestamp, stored-in, owner`}</li>\n            </ul></li>\n          <li parentName=\"ul\">{`falcon_feed_replication`}<ul parentName=\"li\">\n              <li parentName=\"ul\">{`super-types: Process`}</li>\n              <li parentName=\"ul\">{`attributes: timestamp, owner`}</li>\n            </ul></li>\n          <li parentName=\"ul\">{`falcon_process`}<ul parentName=\"li\">\n              <li parentName=\"ul\">{`super-types: Process`}</li>\n              <li parentName=\"ul\">{`attributes: timestamp, runs-on, owner, tags, pipelines, workflow-properties`}</li>\n            </ul></li>\n        </ul></li>\n    </ul>\n    <p>{`One falcon_process entity is created for every cluster that the falcon process is defined for.`}</p>\n    <p>{`The entities are created and de-duped using unique qualifiedName attribute. They provide namespace and can be used for querying/lineage as well. The unique attributes are:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`falcon_process.qualifiedName          - `}<inlineCode parentName=\"li\">{`<process name>@<cluster name>`}</inlineCode></li>\n      <li parentName=\"ul\">{`falcon_cluster.qualifiedName          - `}<inlineCode parentName=\"li\">{`<cluster name>`}</inlineCode></li>\n      <li parentName=\"ul\">{`falcon_feed.qualifiedName             - `}<inlineCode parentName=\"li\">{`<feed name>@<cluster name>`}</inlineCode></li>\n      <li parentName=\"ul\">{`falcon_feed_creation.qualifiedName    - `}<inlineCode parentName=\"li\">{`<feed name>`}</inlineCode></li>\n      <li parentName=\"ul\">{`falcon_feed_replication.qualifiedName - `}<inlineCode parentName=\"li\">{`<feed name>`}</inlineCode></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"falcon-hook\"\n    }}>{`Falcon Hook`}</h2>\n    <p>{`Falcon supports listeners on falcon entity submission. This is used to add entities in Atlas using the model detailed above.\nFollow the instructions below to setup Atlas hook in Falcon:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Add 'org.apache.atlas.falcon.service.AtlasService' to application.services in `}<inlineCode parentName=\"li\">{`<falcon-conf>`}</inlineCode>{`/startup.properties`}</li>\n      <li parentName=\"ul\">{`untar apache-atlas-\\${project.version}-falcon-hook.tar.gz`}</li>\n      <li parentName=\"ul\">{`cd apache-atlas-falcon-hook-\\${project.version}`}</li>\n      <li parentName=\"ul\">{`Copy entire contents of folder apache-atlas-falcon-hook-\\${project.version}/hook/falcon to `}<inlineCode parentName=\"li\">{`<atlas-home>`}</inlineCode>{`/hook/falcon`}</li>\n      <li parentName=\"ul\">{`Link Atlas hook jars in Falcon classpath - 'ln -s `}<inlineCode parentName=\"li\">{`<atlas-home>`}</inlineCode>{`/hook/falcon/* `}<inlineCode parentName=\"li\">{`<falcon-home>`}</inlineCode>{`/server/webapp/falcon/WEB-INF/lib/'`}</li>\n      <li parentName=\"ul\">{`In `}<inlineCode parentName=\"li\">{`<falcon_conf>`}</inlineCode>{`/falcon-env.sh, set an environment variable as follows:`}<pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\"\n          }}>{`export FALCON_SERVER_OPTS=\"\\`<atlas_home>\\`/hook/falcon/*:$FALCON_SERVER_OPTS\"\n`}</code></pre></li>\n    </ul>\n    <p>{`The following properties in `}<inlineCode parentName=\"p\">{`<atlas-conf>`}</inlineCode>{`/atlas-application.properties control the thread pool and notification details:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`atlas.hook.falcon.synchronous   - boolean, true to run the hook synchronously. default false`}</li>\n      <li parentName=\"ul\">{`atlas.hook.falcon.numRetries    - number of retries for notification failure. default 3`}</li>\n      <li parentName=\"ul\">{`atlas.hook.falcon.minThreads    - core number of threads. default 5`}</li>\n      <li parentName=\"ul\">{`atlas.hook.falcon.maxThreads    - maximum number of threads. default 5`}</li>\n      <li parentName=\"ul\">{`atlas.hook.falcon.keepAliveTime - keep alive time in msecs. default 10`}</li>\n      <li parentName=\"ul\">{`atlas.hook.falcon.queueSize     - queue size for the threadpool. default 10000`}</li>\n    </ul>\n    <p>{`Refer `}<a parentName=\"p\" {...{\n        \"href\": \"Configuration\"\n      }}>{`Configuration`}</a>{` for notification related configurations`}</p>\n    <h2 {...{\n      \"id\": \"notes\"\n    }}>{`NOTES`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`In falcon cluster entity, cluster name used should be uniform across components like hive, falcon, sqoop etc. If used with ambari, ambari cluster name should be used for cluster entity`}</li>\n    </ul>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}