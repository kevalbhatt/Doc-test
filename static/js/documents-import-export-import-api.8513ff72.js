(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{"./src/documents/Import-Export/Import-API.md":function(e,t,a){"use strict";a.r(t),a.d(t,"default",function(){return p});var n=a("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),b=(a("./node_modules/react/index.js"),a("./node_modules/@mdx-js/react/dist/index.es.js")),r={},l="wrapper";function p(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(b.b)(l,Object.assign({},r,a,{components:t,mdxType:"MDXLayout"}),Object(b.b)("h1",{id:"import-api"},"Import API"),Object(b.b)("p",null,"The general approach is:"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},"Consumer makes a ZIP file available for import operation. See details below for the 2 flavors of the API."),Object(b.b)("li",{parentName:"ul"},"The API if successful, will return the results of the operation."),Object(b.b)("li",{parentName:"ul"},"Error will be returned on failure of the call.")),Object(b.b)("h3",{id:"import-zip-file-using-post"},"Import ZIP File Using POST"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object.assign({parentName:"tr"},{align:null}),"Title"),Object(b.b)("th",Object.assign({parentName:"tr"},{align:null}),"Import API"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("em",{parentName:"td"},"Example")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),"See Examples sections below.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("em",{parentName:"td"},"Description")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),"Provide the contents of the file to be imported in the request body.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("em",{parentName:"td"},"URL")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("em",{parentName:"td"},"api/atlas/admin/import"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("em",{parentName:"td"},"Method")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("em",{parentName:"td"},"POST"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("em",{parentName:"td"},"URL Parameters")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("em",{parentName:"td"},"None"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("em",{parentName:"td"},"Data Parameters")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("em",{parentName:"td"},"None"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("em",{parentName:"td"},"Success Response")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("em",{parentName:"td"},"!AtlasImporResult")," is returned as JSON. See details below.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("em",{parentName:"td"},"Error Response")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),"Errors that are handled within the system will be returned as ",Object(b.b)("em",{parentName:"td"},"!AtlasBaseException"),".")))),Object(b.b)("h3",{id:"import-zip-file-available-on-server"},"Import ZIP File Available on Server"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("em",{parentName:"th"},"Title")),Object(b.b)("th",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("em",{parentName:"th"},"Import API")))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("em",{parentName:"td"},"Example")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),"See Examples sections below.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("em",{parentName:"td"},"Description")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),"Provide the path of the file to be imported.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("em",{parentName:"td"},"URL")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("em",{parentName:"td"},"api/atlas/admin/importfile"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("em",{parentName:"td"},"Method")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("em",{parentName:"td"},"POST"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("em",{parentName:"td"},"URL Parameters")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("em",{parentName:"td"},"None"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("em",{parentName:"td"},"Data Parameters")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("em",{parentName:"td"},"None"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("em",{parentName:"td"},"Success Response")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("em",{parentName:"td"},"!AtlasImporResult")," is returned as JSON. See details below.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("em",{parentName:"td"},"Error Response")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),"Errors that are handled within the system will be returned as ",Object(b.b)("em",{parentName:"td"},"!AtlasBaseException"),".")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("em",{parentName:"td"},"Notes")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),"The file to be imported needs to be present on the server at the location specified by the ",Object(b.b)("em",{parentName:"td"},"FILENAME")," parameter.")))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Method Signature for Import")),Object(b.b)("pre",null,Object(b.b)("code",Object.assign({parentName:"pre"},{}),'@POST\n@Path("/import")\n@Produces("application/json; charset=UTF-8")\n@Consumes("multipart/form-data")\n')),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Method Signature for Import File")),Object(b.b)("pre",null,Object(b.b)("code",Object.assign({parentName:"pre"},{}),'@POST\n@Path("/importfile")\n@Produces("application/json; charset=UTF-8")\n@Consumes("application/json")\n')),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Import Options"),"\nPlease see ",Object(b.b)("a",Object.assign({parentName:"p"},{href:"Import-API-Options"}),"here")," for the available options during import process."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"AtlasImportResult Response"),"\nThe API will return the results of the import operation in the format defined by the ",Object(b.b)("em",{parentName:"p"},"AtlasImportResult"),":"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("em",{parentName:"li"},"AtlasImportParameters"),": This contains a collection of name value pair of the options that are applied during the import operation."),Object(b.b)("li",{parentName:"ul"},Object(b.b)("em",{parentName:"li"},"Metrics"),": Operation metrics. These include details on the number of types imported, number of entities imported, etc."),Object(b.b)("li",{parentName:"ul"},Object(b.b)("em",{parentName:"li"},"Processed Entities"),": Contains list of GUIDs for the entities that were processed."),Object(b.b)("li",{parentName:"ul"},Object(b.b)("em",{parentName:"li"},"Operation Status"),": Overall status of the operation. Values are ",Object(b.b)("em",{parentName:"li"},"SUCCESS"),", PARTIAL",Object(b.b)("em",{parentName:"li"},"SUCCESS, _FAIL"),".")),Object(b.b)("h3",{id:"examples-using-curl-calls"},"Examples Using CURL Calls"),Object(b.b)("p",null,"The call below performs Import of ",Object(b.b)("em",{parentName:"p"},"!QuickStart")," database using POST."),Object(b.b)("pre",null,Object(b.b)("code",Object.assign({parentName:"pre"},{}),'curl -g -X POST -u adminuser:password -H "Content-Type: multipart/form-data"\n            -H "Cache-Control: no-cache"\n            -F request=@importOptions.json\n            -F data=@quickStartDB.zip\n            "http://localhost:21000/api/atlas/admin/import"\n')),Object(b.b)("p",null,"The ",Object(b.b)("em",{parentName:"p"},"request")," parameter is optional. If import has to be run without any options use:"),Object(b.b)("pre",null,Object(b.b)("code",Object.assign({parentName:"pre"},{}),'curl -g -X POST -u adminuser:password -H "Content-Type: multipart/form-data"\n            -H "Cache-Control: no-cache"\n            -F data=@quickStartDB.zip\n            "http://localhost:21000/api/atlas/admin/import"\n')),Object(b.b)("p",null,"The call below performs Import of ",Object(b.b)("em",{parentName:"p"},"QuickStart")," database using a ZIP file available on server."),Object(b.b)("pre",null,Object(b.b)("code",Object.assign({parentName:"pre"},{}),'curl -X POST -u adminuser:password -H "Cache-Control: no-cache" -d ./importOptions.json\n"http://localhost:21000/api/atlas/admin/importFile" > quickStartDB-import-result.json\n')),Object(b.b)("p",null,"Below is the ",Object(b.b)("em",{parentName:"p"},"AtlasImportResult")," JSON for an import that contains ",Object(b.b)("em",{parentName:"p"},"hive_db"),"."),Object(b.b)("p",null,"The ",Object(b.b)("em",{parentName:"p"},"processedEntities")," contains the ",Object(b.b)("em",{parentName:"p"},"guids")," of all the entities imported."),Object(b.b)("p",null,"The ",Object(b.b)("em",{parentName:"p"},"metrics")," contain a breakdown of the types and entities imported along with the operation performed on them viz. ",Object(b.b)("em",{parentName:"p"},"created")," or ",Object(b.b)("em",{parentName:"p"},"updated"),"."),Object(b.b)("pre",null,Object(b.b)("code",Object.assign({parentName:"pre"},{}),'{\n    "request": {\n        "options": {}\n    },\n    "userName": "admin",\n    "clientIpAddress": "10.0.2.2",\n    "hostName": "10.0.2.15",\n    "timeStamp": 1491285622823,\n    "metrics": {\n        "duration": 9143,\n        "typedef:enum": 0,\n        "typedef:struct": 0,\n        "entity:hive_column:created": 461,\n        "entity:hive_storagedesc:created": 20,\n        "entity:hive_process:created": 12,\n        "entity:hive_db:created": 5,\n        "entity:hive_table:created": 20,\n        "entity:hdfs_path:created": 2,\n        "typedef:entitydef": 0,\n        "typedef:classification": 3\n    },\n    "processedEntities": [\n        "2c4aa713-030b-4fb3-98b1-1cab23d9ac81",\n        "e4aa71ed-70fd-4fa7-9dfb-8250a573e293",\n\n       ...\n\n        "ea0f9bdb-1dfc-4e48-9848-a006129929f9",\n        "b5e2cb41-3e7d-4468-84e1-d87c320e75f9"\n    ],\n    "operationStatus": "SUCCESS"\n}\n')))}p&&p===Object(p)&&Object.isExtensible(p)&&Object.defineProperty(p,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"src/documents/Import-Export/Import-API.md"}}),p.isMDXComponent=!0}}]);
//# sourceMappingURL=documents-import-export-import-api.6d33babde259c5d45092.js.map