{"version":3,"sources":["/Users/keval/projects/atlas/doc/src/Hook-HBase.md"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_keval_projects_atlas_doc_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","className","href","isMDXComponent"],"mappings":"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","file":"static/js/hook-h-base.8fdf8658.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"apache-atlas-hook--bridge-for-apache-hbase\"\n    }}>{`Apache Atlas Hook & Bridge for Apache HBase`}</h1>\n    <h2 {...{\n      \"id\": \"hbase-model\"\n    }}>{`HBase Model`}</h2>\n    <p>{`HBase model includes the following types:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Entity types:`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`hbase_namespace`}<ul parentName=\"li\">\n              <li parentName=\"ul\">{`super-types: !Asset`}</li>\n              <li parentName=\"ul\">{`attributes: qualifiedName, name, description, owner, clusterName, parameters, createTime, modifiedTime`}</li>\n            </ul></li>\n          <li parentName=\"ul\">{`hbase_table`}<ul parentName=\"li\">\n              <li parentName=\"ul\">{`super-types: !DataSet`}</li>\n              <li parentName=\"ul\">{`attributes: qualifiedName, name, description, owner, namespace, column_families, uri, parameters, createtime, modifiedtime, maxfilesize, isReadOnly, isCompactionEnabled, isNormalizationEnabled, ReplicaPerRegion, Durability`}</li>\n            </ul></li>\n          <li parentName=\"ul\">{`hbase_column_family`}<ul parentName=\"li\">\n              <li parentName=\"ul\">{`super-types: !DataSet`}</li>\n              <li parentName=\"ul\">{`attributes:  qualifiedName, name, description, owner, columns, createTime, bloomFilterType, compressionType, compactionCompressionType, encryptionType, inMemoryCompactionPolicy, keepDeletedCells, maxversions, minVersions, datablockEncoding, storagePolicy, ttl, blockCachedEnabled, cacheBloomsOnWrite, cacheDataOnWrite, evictBlocksOnClose, prefetchBlocksOnOpen, newVersionsBehavior, isMobEnabled, mobCompactPartitionPolicy`}</li>\n            </ul></li>\n        </ul></li>\n    </ul>\n    <p>{`HBase entities are created and de-duped in Atlas using unique attribute qualifiedName, whose value should be formatted as detailed below. Note that namespaceName, tableName and columnFamilyName should be in lower case.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`   hbase_namespace.qualifiedName:      <namespaceName>@<clusterName>\n   hbase_table.qualifiedName:          <namespaceName>:<tableName>@<clusterName>\n   hbase_column_family.qualifiedName:  <namespaceName>:<tableName>.<columnFamilyName>@<clusterName>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"hbase-hook\"\n    }}>{`HBase Hook`}</h2>\n    <p>{`Atlas HBase hook registers with HBase master as a co-processor. On detecting changes to HBase namespaces/tables/column-families, Atlas hook updates the metadata in Atlas via Kafka notifications.\nFollow the instructions below to setup Atlas hook in HBase:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Register Atlas hook in hbase-site.xml by adding the following:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\"\n          }}>{`<property>\n  <name>hbase.coprocessor.master.classes</name>\n  <value>org.apache.atlas.hbase.hook.HBaseAtlasCoprocessor</value>\n</property>\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`untar apache-atlas-\\${project.version}-hbase-hook.tar.gz`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`cd apache-atlas-hbase-hook-\\${project.version}`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Copy entire contents of folder apache-atlas-hbase-hook-\\${project.version}/hook/hbase to `}<inlineCode parentName=\"p\">{`<atlas package>`}</inlineCode>{`/hook/hbase`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Link Atlas hook jars in HBase classpath - 'ln -s `}<inlineCode parentName=\"p\">{`<atlas package>`}</inlineCode>{`/hook/hbase/* `}<inlineCode parentName=\"p\">{`<hbase-home>`}</inlineCode>{`/lib/'`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Copy `}<inlineCode parentName=\"p\">{`<atlas-conf>`}</inlineCode>{`/atlas-application.properties to the HBase conf directory.`}</p>\n      </li>\n    </ul>\n    <p>{`The following properties in atlas-application.properties control the thread pool and notification details:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`atlas.hook.hbase.synchronous=false # whether to run the hook synchronously. false recommended to avoid delays in HBase operations. Default: false\natlas.hook.hbase.numRetries=3      # number of retries for notification failure. Default: 3\natlas.hook.hbase.queueSize=10000   # queue size for the threadpool. Default: 10000\n\natlas.cluster.name=primary # clusterName to use in qualifiedName of entities. Default: primary\n\natlas.kafka.zookeeper.connect=                    # Zookeeper connect URL for Kafka. Example: localhost:2181\natlas.kafka.zookeeper.connection.timeout.ms=30000 # Zookeeper connection timeout. Default: 30000\natlas.kafka.zookeeper.session.timeout.ms=60000    # Zookeeper session timeout. Default: 60000\natlas.kafka.zookeeper.sync.time.ms=20             # Zookeeper sync time. Default: 20\n`}</code></pre>\n    <p>{`Other configurations for Kafka notification producer can be specified by prefixing the configuration name with \"atlas.kafka.\".\nFor list of configuration supported by Kafka producer, please refer to `}<a parentName=\"p\" {...{\n        \"href\": \"http://kafka.apache.org/documentation/#producerconfigs\"\n      }}>{`Kafka Producer Configs`}</a></p>\n    <h2 {...{\n      \"id\": \"notes\"\n    }}>{`NOTES`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Only the namespace, table and column-family create/update/ delete operations are captured by Atlas HBase hook. Changes to columns are be captured.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"importing-hbase-metadata\"\n    }}>{`Importing HBase Metadata`}</h2>\n    <p>{`Apache Atlas provides a command-line utility, import-hbase.sh, to import metadata of Apache HBase namespaces and tables into Apache Atlas.\nThis utility can be used to initialize Apache Atlas with namespaces/tables present in a Apache HBase cluster.\nThis utility supports importing metadata of a specific table, tables in a specific namespace or all tables.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`Usage 1: <atlas package>/hook-bin/import-hbase.sh\nUsage 2: <atlas package>/hook-bin/import-hbase.sh [-n <namespace regex> OR --namespace <namespace regex>] [-t <table regex> OR --table <table regex>]\nUsage 3: <atlas package>/hook-bin/import-hbase.sh [-f <filename>]\n           File Format:\n             namespace1:tbl1\n             namespace1:tbl2\n             namespace2:tbl1\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}